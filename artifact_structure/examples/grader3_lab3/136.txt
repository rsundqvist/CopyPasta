Kommentarerna som vi ger är försedda med ett prefix i form av ett tecken:
Förstår du inte vad rättaren menar? Maila och fråga - vi bits inte :-)

Alla kommentarer skall du rätta. Inga felanmärkningar skall naturligtvis 
upprepas i senare labbar.

"-"   markerar en allvarlig kommentar som antagligen har resulterat i en retur.
"="   markerar en allvarlig kommentar som *inte* har resulterat i en retur utan
	  enbart poängavdrag. Många "=" kan också resultera i en retur.
"#"   markerar en mindre allvarlig kommentar.
"*"   kommentar, behöver ej åtgärdas.
"+"   extra bra
-------------------------------------------------------------------------------
Poäng och returpolicy finns beskrivet under "assignments->Lab acceptance rules".
accept på labben innebär att man inte kan lämna in igen 
(men inte att det är "godkänd")
reject på labben att man kan eller måste lämna in igen och kan ev. få 1p till.
Om du får retur på bara en uppgift, lämna bara in den uppgiften nästa gång.
-------------------------------------------------------------------------------

Lab 3 kan ge max 6p.

Grupp: 136, inlämning 1
Poäng: 3, accepterad

Bra, här är mina kommentar(er):

allmänt: 

Steg3:
= Ert program kommer att krascha trots er "felhantering". Fundera på vad som är
lämpligt då man inte har några argument. Ska man tvingas ange en storlek.
Vad händer om args[0] inte innehåller ett korrekt heltal?

CrystalControl: 
# Använd vettiga variabelnamn. "Rut" borde heta något i stil med "view" eller än
hellre "crystalView".

# showInputDialog() är en statisk metod. Ni behöver inte skapa någon JOptionPane,
anropa istället genom att skriva String input = JOptionPane.showInputDialog().

CrystalView:
= Att rita ut svarta rutor på alla punkter som saknar joner är extremt
ineffektivt. Använd setBackground() i konstruktorn istälet och rita bara ut
något när ni har en jon på den aktuella positionen.

CrystalModel:
# Ni använder booleaner konstigt. Kod på formen

    if (a < b) {
        return true;
    } else {
       return false;
    }
	
Kan och bör skrivas
    return a < b;
	
= crystallizeOneIon(): Ni har redan en metod för att ta reda på om en punkt
ligger utanför en cirkel. 


Richard Sundqvist